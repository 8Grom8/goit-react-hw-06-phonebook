{"version":3,"sources":["redux/contacts/contacts.actions.js","components/Contacts/ContactForm/ContactForm.jsx","components/Contacts/Filter/Filter.jsx","components/Contacts/ListItem/ListItem.jsx","components/Contacts/ContactList/ContactList.jsx","components/Contacts/Contacts.jsx","components/App/App.js","redux/contacts/contacts.reducer.js","redux/store.js","index.js","components/Contacts/ContactForm/ContactForm.module.css"],"names":["addNewContact","createAction","filterChange","removeContact","ContactForm","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","items","some","item","alert","id","uuidv4","className","css","form","onSubmit","this","htmlFor","labelStyles","type","pattern","title","required","onChange","btnStyle","Component","mapDispatchToProps","connect","contacts","mapDispatch","filter","ListItem","handleDelete","onClick","ContactList","map","formattedFilter","toLowerCase","trim","includes","originalItems","App","createReducer","action","payload","_","contactsReducer","combineReducers","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","store","configureStore","devTools","reducer","persistedStore","persistStore","ReactDOM","render","StrictMode","loading","persistor","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.84e57057.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addNewContact = createAction(\"contacts/addNewContact\");\r\nconst filterChange = createAction(\"contacts/removeContact\");\r\nconst removeContact = createAction(\"contacts/filterChange\");\r\n\r\nexport { addNewContact, filterChange, removeContact };","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport css from \"./ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { addNewContact } from \"../../../redux/contacts/contacts.actions\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    addNewContact: PropTypes.func.isRequired,\r\n    items: PropTypes.array,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name } = this.state;\r\n\r\n    const isDuplicate = this.props.items.some((item) => item.name === name);\r\n    if (isDuplicate) {\r\n      alert(\"Такоe имя уже существует \" + name);\r\n      return;\r\n    }\r\n    this.props.addNewContact({ ...this.state, id: uuidv4() });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className={css.form} onSubmit={this.handleSubmit}>\r\n          <label htmlFor={css.labelStyles}>Name</label>\r\n          <input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n          />\r\n          <label htmlFor={css.labelStyles}>Number</label>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n          />\r\n          <button type=\"submit\" className={css.btnStyle}>\r\n            Add\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  items: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addNewContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterChange } from \"../../../redux/contacts/contacts.actions\";\r\n\r\nconst Filter = ({ handleChange, filter }) => {\r\n  return (\r\n    <div className=\"filterStyle\">\r\n      <label htmlFor=\"filter\">Find contacts by name</label>\r\n      <input\r\n        id=\"filter\"\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        className=\"px-4 py-3 rounded-md\"\r\n        onChange={handleChange}\r\n        value={filter}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapState = (state) => {\r\n  return {\r\n    filter: state.contacts.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  handleChange: (e) => filterChange(e.target.value),\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(Filter);","import PropTypes from \"prop-types\";\r\n\r\nconst ListItem = ({ item, handleDelete }) => {\r\n  const {  name, number } = item;\r\n\r\n  return (\r\n    <li>\r\n      <div>\r\n        <span> { name }:{number}</span>\r\n        <button onClick={handleDelete}>Delete</button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nListItem.propTypes = {\r\n  item: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  handleDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ListItem;","import PropTypes from \"prop-types\";\r\nimport ListItem from \"../ListItem/ListItem\";\r\n\r\n\r\nconst ContactList = ({ items,  handleDelete }) => {\r\n  return (\r\n    <ul>\r\n      {items.map((item) => (\r\n        <ListItem\r\n          key={item.id}\r\n          item={item}\r\n          handleDelete={() => handleDelete(item.id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.string.isRequired }))\r\n    .isRequired,\r\n  handleDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from \"react-redux\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport List from \"./ContactList/ContactList\";\r\nimport {\r\n  addNewContact,\r\n  filterChange,\r\n  removeContact,\r\n} from \"../../redux/contacts/contacts.actions\";\r\n\r\nconst Contacts = ({\r\n  items,\r\n  filter,\r\n  handleChange,\r\n  handleSubmit,\r\n  handleDelete,\r\n}) => {\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Phonebook</h1>\r\n      <ContactForm handleSubmit={handleSubmit} />\r\n      <h2>Contacts</h2>\r\n      <Filter filter={filter} handleChange={handleChange} />\r\n      <List items={items} handleDelete={handleDelete} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapState = (state) => {\r\n  const items = state.contacts.items;\r\n  const filter = state.contacts.filter;\r\n\r\n  const formattedFilter = filter.toLowerCase().trim();\r\n  const filteredItems = items.filter((item) =>\r\n    item.name.toLowerCase().includes(formattedFilter)\r\n  );\r\n  return {\r\n    items: filteredItems,\r\n    originalItems: items,\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  handleSubmit: addNewContact,\r\n  handleDelete: removeContact,\r\n  handleChange: filterChange,\r\n};\r\n\r\nexport default connect(mapState, mapDispatch )(Contacts);\r\n","import React from \"react\";\r\nimport Contacts from \"../Contacts/Contacts.jsx\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"mainContainer\">\r\n      <Contacts />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport { addNewContact, filterChange, removeContact } from \"./contacts.actions\";\r\n\r\nconst items = createReducer([], {\r\n  [addNewContact]: (state, action) => [action.payload, ...state],\r\n  [removeContact]: (state, action) =>\r\n    state.filter((item) => item.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [filterChange]: (_, action) => action.payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport default contactsReducer;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { persistReducer, persistStore } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport contactsReducer from \"./contacts/contacts.reducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  whitelist: ['items'],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, contactsReducer);\r\n\r\nconst store = configureStore({\r\n  devTools: true,\r\n  reducer: {\r\n      contacts: persistedReducer,\r\n  },\r\n});\r\n\r\nconst persistedStore = persistStore(store);\r\n\r\nexport { store, persistedStore };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./components/App/App\";\r\nimport \"./styles/global.css\";\r\nimport { store, persistedStore } from \"./redux/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistedStore}>\r\n        \r\n    <App />\r\n\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2qmvU\",\"btnStyle\":\"ContactForm_btnStyle__LrHHM\",\"labelStyles\":\"ContactForm_labelStyles__IsDQp\"};"],"sourceRoot":""}